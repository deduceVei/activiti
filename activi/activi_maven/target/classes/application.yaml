spring:
  datasource:
    name: mysql_localhost_act_dev_20190620
    url: jdbc:mysql://localhost:3306/act_dev_20190620?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filters: config,wall,stat
      #配置初始化大小/最小/最大
      initialSize: 1
      minIdle: 1
      maxActive: 20
      #获取连接等待超时时间
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      poolPreparedStatements: false
      maxPoolPreparedStatementPerConnectionSize: 20
      maxOpenPreparedStatements: 20
      connectionProperties: druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=false
  #   activiti default configuration
  activiti:
    #flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常。
    #true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建。
    database-schema-update: true
    #自动部署 扫描location此路径下的bpmn
    check-process-definitions: false
    process-definition-location-prefix: classpath:/processes/
    #    process-definition-location-suffixes:
    #      - **.bpmn
    #      - **.bpmn20.xml
    history-level: full
    async-executor-activate: false


  # 静态资源配置
#  resources:
#    static-locations: classpath:/META-INF/resources/**,classpath:/resources/**,classpath:/static/**,classpath:/public/**

## 该配置节点为独立的节点
mybatis:
  #注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations: classpath:mapping/*.xml
  # 注意：对应实体类的路径//entity扫描的包名
  type-aliases-package: activi.com.model
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    #当为null时也返回
    call-setters-on-nulls: true
